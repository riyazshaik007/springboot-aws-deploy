version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "807034087511"
    REPOSITORY_URI: "807034087511.dkr.ecr.us-east-1.amazonaws.com/springboot-aws-deploy"

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo Installing Maven...
      - yum install -y maven
  build:
    commands:
      - echo "Building Spring Boot application..."
      - mvn clean package -DskipTests
      - echo "Building Docker image..."
      # Use wildcard to pick up the JAR no matter its version
      - docker build -t $REPOSITORY_URI:latest .
  post_build:
    commands:
      - echo "Logging in to ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION \
        | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "Pushing Docker image to ECR..."
      - docker push $REPOSITORY_URI:latest
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Creating imagedefinitions.json for ECS..."
      - printf '[{"name":"springboot-aws-deploy","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - target/*.jar
    - imagedefinitions.json
